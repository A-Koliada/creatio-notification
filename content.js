console.log("‚úÖ Creatio Notifier content script –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ");

function checkAuthentication() {
  try {
    const isAuthenticated =
      document.cookie.includes("AuthData") || 
      document.cookie.includes("BPMCSRF") || 
      document.cookie.includes("BPMSESSIONID");
    
    console.log("üîç –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É content.js:", isAuthenticated ? "‚úÖ –¢–∞–∫" : "‚ùå –ù—ñ");
    
    chrome.runtime.sendMessage({ 
      action: "updateAuthStatus", 
      authorized: isAuthenticated 
    });
    
    return isAuthenticated;
  } catch (error) {
    console.error("üö® –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", error);
    return false;
  }
}

// Initial check
checkAuthentication();

// Periodic check every 30 seconds
setInterval(checkAuthentication, 30000);

// Message handler
chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {
  if (request.action === "checkAuth") {
    const authStatus = checkAuthentication();
    sendResponse({ authorized: authStatus });
    return true;
  }
  return false;
});

// Notify background.js that content script is ready
chrome.runtime.sendMessage({ action: "contentScriptReady" })
  .then(() => console.log("‚úÖ Content script –ø–æ–≤—ñ–¥–æ–º–∏–≤ background.js –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å"))
  .catch((error) => console.error("üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", error));